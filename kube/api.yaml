apiVersion: v1
kind: Service
metadata:
    name: ${project-name}-api-service
spec:
    selector:
        app: ${project-name}-api
    ports:
        - port: 4000
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: ${project-name}-api
spec:
    replicas: 1
    selector:
        matchLabels:
            app: ${project-name}-api
    template:
        metadata:
            labels:
                app: ${project-name}-api
        spec:
            terminationGracePeriodSeconds: 60
            containers:
                - name: app
                  image: ${ecr-repo-url}/${project-name}:staging-latest
                  imagePullPolicy: Always
                  ports:
                      - containerPort: 4000
                  envFrom:
                      - secretRef:
                            name: ${project-name}-environment
                  env:
                      - name: PORT
                        value: '4000'
                      - name: REDIS_HOST
                        value: 'redis'
                      - name: REDIS_PORT
                        value: '6379'
                      - name: DB_HOST
                        value: '${project-name}-staging.cng5dagraok1.eu-west-2.rds.amazonaws.com'
                      - name: DD_AGENT_HOST
                        valueFrom:
                            fieldRef:
                                fieldPath: status.hostIP
                      - name: DD_ENV
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.labels['tags.datadoghq.com/env']
                      - name: DD_VERSION
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.labels['tags.datadoghq.com/version']
                      - name: DD_LOGS_INJECTION
                        value: 'true'
                  livenessProbe:
                      httpGet:
                          path: /status
                          port: 4000
                      initialDelaySeconds: 5
                      periodSeconds: 3
                  readinessProbe:
                      httpGet:
                          path: /status
                          port: 4000
                      initialDelaySeconds: 5
                      periodSeconds: 3
                  startupProbe:
                      httpGet:
                          path: /status
                          port: 4000
                      failureThreshold: 30
                      periodSeconds: 10
