# This is a basic workflow to help you get started with Actions

name: Main

# Controls when the workflow will run
on:
    # Triggers the workflow on push (staging & master) and pull requests (staging)
    push:
        branches: [staging, master]
    pull_request:
        branches: [staging]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_PROD_REGION: us-east-1
    AWS_STAGING_REGION: eu-west-2
    AWS_SECRETS_STAGING: staging/uplevyl
    AWS_SECRETS_PROD: prod/uplevyl
    AWS_CLUSTER_STAGING: uplevyl-staging
    AWS_CLUSTER_PROD: uplevyl-prod
    ECR_REPOSITORY: com.uplevyl.api

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    format-lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: bahmutov/npm-install@v1

            - name: Format
              run: npm run format

            - name: Lint
              run: npm run lint
    unit-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: bahmutov/npm-install@v1

            - name: Run Unit Tests
              run: npm run test:ci
    integration-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: bahmutov/npm-install@v1

            - uses: nelonoel/branch-name@v1
              env:
                  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

            - name: Get region
              run: |
                  if [ ${{ env.BRANCH_NAME }} = "master" ]; then
                  echo "AWS_SECRETS_REGION=${{ env.AWS_PROD_REGION }}" >> $GITHUB_ENV
                  else
                  echo "AWS_SECRETS_REGION=${{ env.AWS_STAGING_REGION }}" >> $GITHUB_ENV
                  fi

            - name: Get secret
              run: |
                  if [ ${{ env.BRANCH_NAME }} = "master" ]; then
                  echo "AWS_SECRETS_NAME=${{ env.AWS_SECRETS_PROD }}" >> $GITHUB_ENV
                  else
                  echo "AWS_SECRETS_NAME=${{ env.AWS_SECRETS_STAGING }}" >> $GITHUB_ENV
                  fi

            - name: Store ENV from AWS SecretManager
              uses: say8425/aws-secrets-manager-actions@v2
              with:
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_DEFAULT_REGION: ${{ env.AWS_SECRETS_REGION }}
                  SECRET_NAME: ${{ env.AWS_SECRETS_NAME }}
                  OUTPUT_PATH: '.env' # optional

            - name: Run Integration Tests
              run: npm run test:e2e:docker

            - name: Clean up
              run: docker-compose down
    build:
        runs-on: ubuntu-latest
        needs: [format-lint, unit-test, integration-test]
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging')
        steps:
            - name: Cancel Previous Runs
              uses: styfle/cancel-workflow-action@0.4.1
              with:
                  access_token: ${{ github.token }}

            - uses: actions/checkout@v2

            - uses: nelonoel/branch-name@v1
              env:
                  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

            - name: Configure AWS credentials (ECR)
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_PROD_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build and push image
              id: build
              uses: whoan/docker-build-with-cache-action@v5
              with:
                  registry: ${{ steps.login-ecr.outputs.registry }}
                  image_name: ${{ env.ECR_REPOSITORY }}
                  image_tag: ${{ env.BRANCH_NAME }}-latest,${{ env.BRANCH_NAME }}-${{ github.sha }}

            - name: Get region
              run: |
                  if [ ${{ env.BRANCH_NAME }} = "master" ]; then
                  echo "AWS_SELECTED_REGION=${{ env.AWS_PROD_REGION }}" >> $GITHUB_ENV
                  else
                  echo "AWS_SELECTED_REGION=${{ env.AWS_STAGING_REGION }}" >> $GITHUB_ENV
                  fi

            - name: Get cluster name
              run: |
                  if [ ${{ env.BRANCH_NAME }} = "master" ]; then
                  echo "AWS_CLUSTER_NAME=${{ env.AWS_CLUSTER_PROD }}" >> $GITHUB_ENV
                  else
                  echo "AWS_CLUSTER_NAME=${{ env.AWS_CLUSTER_STAGING }}" >> $GITHUB_ENV
                  fi

            - name: Configure AWS credentials (EKS)
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_SELECTED_REGION }}

            - name: Rollout image
              uses: ianbelcher/eks-kubectl-action@master
              with:
                  aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
                  aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                  aws_region: ${{ env.AWS_SELECTED_REGION }}
                  cluster_name: ${{ env.AWS_CLUSTER_NAME }}
                  args: set image deployment/uplevyl-api app=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.BRANCH_NAME }}-${{ github.sha }}
                  # args: set image deployment/uplevyl-api app=${{ steps.build.outputs.FULL_IMAGE_NAME }}
